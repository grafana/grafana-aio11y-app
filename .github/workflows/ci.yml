name: Build PR

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-

      - name: Install dependencies
        run: cd frontend && yarn install --frozen-lockfile

      - name: Lint
        run: cd frontend && yarn run lint

      - name: Start grafana docker
        run: cd frontend && docker-compose up -d

      - name: Stop grafana docker
        run: cd frontend && docker-compose down

      - name: Build and push to Docker Hub
        uses: grafana/shared-workflows/actions/push-to-gar-docker@main
        id: push-to-gar
        with:
          platforms: linux/amd64,linux/arm64
          file: ./frontend/docker-compose.yaml
          tags: |
            "${{ steps.image-tag.outputs.version }}"
            "latest"
          image_name: "ai-o11y-frontend"
          environment: "dev"

